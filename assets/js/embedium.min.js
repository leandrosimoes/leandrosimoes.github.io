/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ts/Embedium.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ts/Embedium.ts":
/*!****************************!*\
  !*** ./src/ts/Embedium.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

  "use strict";
  eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n}\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst User_1 = __importDefault(__webpack_require__(/*! ./classes/User */ \"./src/ts/classes/User.ts\"));\r\nconst Feed_1 = __importDefault(__webpack_require__(/*! ./classes/Feed */ \"./src/ts/classes/Feed.ts\"));\r\nconst Post_1 = __importDefault(__webpack_require__(/*! ./classes/Post */ \"./src/ts/classes/Post.ts\"));\r\nconst helpers = __importStar(__webpack_require__(/*! ./helpers */ \"./src/ts/helpers/index.ts\"));\r\nclass Embedium {\r\n    constructor(user) {\r\n        this.version = '1.0.0';\r\n        this._environment = 'develop';\r\n        this._user = new User_1.default(user);\r\n        document.addEventListener('click', (e) => {\r\n            let element = e.target;\r\n            if (!!element && !!element.classList && element.className.indexOf('embedium-posts-post') >= 0) {\r\n                let tries = 10;\r\n                let url = '';\r\n                while (tries > 0 && !url) {\r\n                    url = element.dataset.embediumUrl || '';\r\n                    if (!url)\r\n                        element = element.parentElement || new HTMLElement();\r\n                }\r\n                if (!!url)\r\n                    window.open(url, '_blank');\r\n            }\r\n        });\r\n    }\r\n    getUserContent() {\r\n        return new Promise((resolve, reject) => {\r\n            helpers.fetchUserContent(this._user, this._environment)\r\n                .then((result) => {\r\n                console.log(helpers.xml2json(result, ''));\r\n                resolve(helpers.xml2json(result, ''));\r\n            });\r\n        });\r\n    }\r\n    embedTo(container) {\r\n        if (!container)\r\n            return;\r\n        this.getUserFeed().then(result => {\r\n            let feed = result;\r\n            let coverHtml = `                \r\n                <div class=\"embedium-posts-post-data-photo\">\r\n                    <img class=\"embedium-posts-post-data-photo-image\" src=\"{{cover-url}}\" style=\"width:{{width}};\" alt=\"Medium post photo\">                            \r\n                </div>\r\n            `;\r\n            let postsHtml = feed.Posts.map((p) => {\r\n                return `\r\n                    <div class=\"embedium-posts-post\" data-embedium-url=\"${p.Link}\">\r\n                        <div class=\"embedium-posts-post-user\">\r\n                            <div class=\"embedium-posts-post-user-photo\">\r\n                                <img class=\"embedium-posts-post-user-photo-image\" src=\"${feed.User.Photo}\" alt=\"Medium user photo\">\r\n                            </div>\r\n                            <div class=\"embedium-posts-post-user-data\">\r\n                                <div class=\"embedium-posts-post-user-data-name\">\r\n                                    <a target=\"_blank\" href=\"${feed.User.Profile}\">${feed.User.Name}</a>\r\n                                </div>\r\n                                <div class=\"embedium-posts-post-user-data-date\">${helpers.getPostFormatedDate(p.PubDate)}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"embedium-posts-post-data\">\r\n                            ${p.HasCover ? coverHtml.replace('{{cover-url}}', p.Cover).replace('{{width}}', p.Width) : ''}\r\n                            <div class=\"embedium-posts-post-data-title\">\r\n                                ${p.Title}\r\n                            </div>\r\n                            <div class=\"embedium-posts-post-data-abreviation\">\r\n                                ${p.Description}\r\n                            </div>\r\n                            <div class=\"embedium-posts-post-data-read-more\">\r\n                                <a target=\"_blank\" href=\"${p.Link}\">Read more...</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n            });\r\n            let containerHtml = `\r\n                <div class=\"embedium-container\">\r\n                    <div class=\"embedium-posts\">\r\n                        ${postsHtml.join('')}\r\n                    </div>\r\n                </div>\r\n            `;\r\n            container.innerHTML = containerHtml;\r\n        });\r\n    }\r\n    getUserFeed() {\r\n        return new Promise((resolve, reject) => {\r\n            this.getUserContent().then((result) => {\r\n                let posts = result.rss.channel.item.map((i) => {\r\n                    let categories = i.category;\r\n                    if (!!categories && !Array.isArray(categories)) {\r\n                        categories = [categories['#cdata']];\r\n                    }\r\n                    return new Post_1.default(new Date(i.pubDate), i.title['#cdata'].toString(), (categories || []).map((g) => g['#cdata']), i['dc:creator']['#cdata'], i.link.toString(), i['content:encoded']['#cdata']);\r\n                });\r\n                this._user = new User_1.default(this._user.User, this._user.Name || result.rss.channel.title['#cdata'].replace('Stories by', '').replace('on Medium', '').trim(), result.rss.channel.image.url);\r\n                let feed = new Feed_1.default(result.rss.channel.title['#cdata'], this._user, posts, new Date(result.rss.channel.lastBuildDate));\r\n                resolve(feed);\r\n            });\r\n        });\r\n    }\r\n}\r\nexports.default = Embedium;\r\n((window) => {\r\n    window.Embedium = Embedium;\r\n})(window);\r\n\n\n//# sourceURL=webpack:///./src/ts/Embedium.ts?");
  
  /***/ }),
  
  /***/ "./src/ts/classes/Feed.ts":
  /*!********************************!*\
    !*** ./src/ts/classes/Feed.ts ***!
    \********************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {
  
  "use strict";
  eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Feed {\r\n    constructor(title, user, posts, lastBuildDate) {\r\n        this._user = user;\r\n        this._title = title || `Stories by ${this._user.Name} on Medium`;\r\n        this._posts = posts;\r\n        this._lastBuildDate = lastBuildDate;\r\n    }\r\n    get User() {\r\n        return this._user;\r\n    }\r\n    get Title() {\r\n        return this._title;\r\n    }\r\n    get Posts() {\r\n        return this._posts;\r\n    }\r\n}\r\nexports.default = Feed;\r\n\n\n//# sourceURL=webpack:///./src/ts/classes/Feed.ts?");
  
  /***/ }),
  
  /***/ "./src/ts/classes/Post.ts":
  /*!********************************!*\
    !*** ./src/ts/classes/Post.ts ***!
    \********************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {
  
  "use strict";
  eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Post {\r\n    constructor(pubDate, title, categories, creator, link, content) {\r\n        this._pubDate = pubDate;\r\n        this._title = title;\r\n        this._categories = categories;\r\n        this._creator = creator;\r\n        this._link = link;\r\n        this._content = content;\r\n    }\r\n    get PubDate() {\r\n        return this._pubDate;\r\n    }\r\n    get Title() {\r\n        return this._title;\r\n    }\r\n    get Categories() {\r\n        return this._categories;\r\n    }\r\n    get Creator() {\r\n        return this._creator;\r\n    }\r\n    get Link() {\r\n        return this._link;\r\n    }\r\n    get Content() {\r\n        return this._content;\r\n    }\r\n    get Cover() {\r\n        let element = document.createElement(`div`);\r\n        element.innerHTML = this._content;\r\n        let cover = element.getElementsByTagName('img') || [];\r\n        if (cover.length <= 0)\r\n            return '';\r\n        return cover[0].src;\r\n    }\r\n    get HasCover() {\r\n        let element = document.createElement(`div`);\r\n        element.innerHTML = this._content;\r\n        let cover = element.getElementsByTagName('img') || [];\r\n        return cover.length > 0 && cover[0].src.indexOf('max') > 0;\r\n    }\r\n    get Description() {\r\n        let element = document.createElement(`div`);\r\n        element.innerHTML = this._content;\r\n        let description = element.getElementsByTagName('p') || [];\r\n        if (description.length <= 0)\r\n            return 'No description';\r\n        let p = description[0].innerText || '';\r\n        if (p.length > 140) {\r\n            p = p.substring(0, 137) + '...';\r\n        }\r\n        return p;\r\n    }\r\n    get Width() {\r\n        let cover = this.Cover;\r\n        if (!cover)\r\n            return '0';\r\n        let rgxWidth = new RegExp(/max\\/\\d{0,20}\\//g);\r\n        let width = cover.match(rgxWidth);\r\n        rgxWidth = new RegExp(/\\d/g);\r\n        if (!width || width.length <= 0)\r\n            return '0';\r\n        return (width[0].match(rgxWidth) || ['']).join('') + 'px';\r\n    }\r\n}\r\nexports.default = Post;\r\n\n\n//# sourceURL=webpack:///./src/ts/classes/Post.ts?");
  
  /***/ }),
  
  /***/ "./src/ts/classes/User.ts":
  /*!********************************!*\
    !*** ./src/ts/classes/User.ts ***!
    \********************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {
  
  "use strict";
  eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass User {\r\n    constructor(user, name = '', photo = '') {\r\n        this._user = (user || '').replace(/\\@/g, '');\r\n        this._name = name || '';\r\n        this._photo = photo || '';\r\n    }\r\n    get User() {\r\n        return this._user;\r\n    }\r\n    get Name() {\r\n        return this._name;\r\n    }\r\n    get Photo() {\r\n        return this._photo;\r\n    }\r\n    get Profile() {\r\n        return `https://medium.com/@${this._user}`;\r\n    }\r\n}\r\nexports.default = User;\r\n\n\n//# sourceURL=webpack:///./src/ts/classes/User.ts?");
  
  /***/ }),
  
  /***/ "./src/ts/helpers/index.ts":
  /*!*********************************!*\
    !*** ./src/ts/helpers/index.ts ***!
    \*********************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {
  
  "use strict";
  eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Months = {\r\n    0: 'Jan',\r\n    1: 'Feb',\r\n    2: 'Mar',\r\n    3: 'Apr',\r\n    4: 'May',\r\n    5: 'Jun',\r\n    6: 'Jul',\r\n    7: 'Aug',\r\n    8: 'Sep',\r\n    9: 'Oct',\r\n    10: 'Nov',\r\n    11: 'Dec'\r\n};\r\nfunction getPostFormatedDate(postDate) {\r\n    return `${Months[postDate.getMonth()]} ${postDate.getDay()}, ${postDate.getFullYear()}`;\r\n}\r\nexports.getPostFormatedDate = getPostFormatedDate;\r\nfunction xml2json(xml, tab) {\r\n    var X = {\r\n        toObj: function (xml) {\r\n            var o = {};\r\n            if (xml.nodeType == 1) {\r\n                if (xml.attributes.length)\r\n                    for (var i = 0; i < xml.attributes.length; i++)\r\n                        o[\"@\" + xml.attributes[i].nodeName] = (xml.attributes[i].nodeValue || \"\").toString();\r\n                if (xml.firstChild) {\r\n                    var textChild = 0, cdataChild = 0, hasElementChild = false;\r\n                    for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n                        if (n.nodeType == 1)\r\n                            hasElementChild = true;\r\n                        else if (n.nodeType == 3 && n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/))\r\n                            textChild++; // non-whitespace text\r\n                        else if (n.nodeType == 4)\r\n                            cdataChild++; // cdata section node\r\n                    }\r\n                    if (hasElementChild) {\r\n                        if (textChild < 2 && cdataChild < 2) {\r\n                            X.removeWhite(xml);\r\n                            for (var n = xml.firstChild; n; n = n.nextSibling) {\r\n                                if (n.nodeType == 3)\r\n                                    o[\"#text\"] = X.escape(n.nodeValue);\r\n                                else if (n.nodeType == 4)\r\n                                    o[\"#cdata\"] = X.escape(n.nodeValue);\r\n                                else if (o[n.nodeName]) {\r\n                                    if (o[n.nodeName] instanceof Array)\r\n                                        o[n.nodeName][o[n.nodeName].length] = X.toObj(n);\r\n                                    else\r\n                                        o[n.nodeName] = [o[n.nodeName], X.toObj(n)];\r\n                                }\r\n                                else\r\n                                    o[n.nodeName] = X.toObj(n);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!xml.attributes.length)\r\n                                o = X.escape(X.innerXml(xml));\r\n                            else\r\n                                o[\"#text\"] = X.escape(X.innerXml(xml));\r\n                        }\r\n                    }\r\n                    else if (textChild) {\r\n                        if (!xml.attributes.length)\r\n                            o = X.escape(X.innerXml(xml));\r\n                        else\r\n                            o[\"#text\"] = X.escape(X.innerXml(xml));\r\n                    }\r\n                    else if (cdataChild) {\r\n                        if (cdataChild > 1)\r\n                            o = X.escape(X.innerXml(xml));\r\n                        else\r\n                            for (var n = xml.firstChild; n; n = n.nextSibling)\r\n                                o[\"#cdata\"] = X.escape(n.nodeValue);\r\n                    }\r\n                }\r\n                if (!xml.attributes.length && !xml.firstChild)\r\n                    o = null;\r\n            }\r\n            else if (xml.nodeType == 9) {\r\n                o = X.toObj(xml.documentElement);\r\n            }\r\n            else\r\n                alert(\"unhandled node type: \" + xml.nodeType);\r\n            return o;\r\n        },\r\n        toJson: function (o, name, ind) {\r\n            var json = name ? (\"\\\"\" + name + \"\\\"\") : \"\";\r\n            if (o instanceof Array) {\r\n                for (var i = 0, n = o.length; i < n; i++)\r\n                    o[i] = X.toJson(o[i], \"\", ind + \"\\t\");\r\n                json += (name ? \":[\" : \"[\") + (o.length > 1 ? (\"\\n\" + ind + \"\\t\" + o.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind) : o.join(\"\")) + \"]\";\r\n            }\r\n            else if (o == null)\r\n                json += (name && \":\") + \"null\";\r\n            else if (typeof (o) == \"object\") {\r\n                var arr = [];\r\n                for (var m in o)\r\n                    arr[arr.length] = X.toJson(o[m], m, ind + \"\\t\");\r\n                json += (name ? \":{\" : \"{\") + (arr.length > 1 ? (\"\\n\" + ind + \"\\t\" + arr.join(\",\\n\" + ind + \"\\t\") + \"\\n\" + ind) : arr.join(\"\")) + \"}\";\r\n            }\r\n            else if (typeof (o) == \"string\")\r\n                json += (name && \":\") + \"\\\"\" + o.toString() + \"\\\"\";\r\n            else\r\n                json += (name && \":\") + o.toString();\r\n            return json;\r\n        },\r\n        innerXml: function (node) {\r\n            let s = \"\";\r\n            if (\"innerHTML\" in node)\r\n                s = node.innerHTML;\r\n            else {\r\n                let asXml = function (n) {\r\n                    let s = \"\";\r\n                    if (n.nodeType == 1) {\r\n                        s += \"<\" + n.nodeName;\r\n                        for (let i = 0; i < n.attributes.length; i++)\r\n                            s += \" \" + n.attributes[i].nodeName + \"=\\\"\" + (n.attributes[i].nodeValue || \"\").toString() + \"\\\"\";\r\n                        if (n.firstChild) {\r\n                            s += \">\";\r\n                            for (let c = n.firstChild; c; c = c.nextSibling)\r\n                                s += asXml(c);\r\n                            s += \"</\" + n.nodeName + \">\";\r\n                        }\r\n                        else\r\n                            s += \"/>\";\r\n                    }\r\n                    else if (n.nodeType == 3)\r\n                        s += n.nodeValue;\r\n                    else if (n.nodeType == 4)\r\n                        s += \"<![CDATA[\" + n.nodeValue + \"]]>\";\r\n                    return s;\r\n                };\r\n                for (let c = node.firstChild; c; c = c.nextSibling || new Node())\r\n                    s += asXml(c);\r\n            }\r\n            return s;\r\n        },\r\n        escape: function (txt) {\r\n            return txt.replace(/[\\\\]/g, \"\\\\\\\\\")\r\n                .replace(/[\\\"]/g, '\\\\\"')\r\n                .replace(/[\\n]/g, '\\\\n')\r\n                .replace(/[\\r]/g, '\\\\r');\r\n        },\r\n        removeWhite: function (e) {\r\n            e.normalize();\r\n            for (var n = e.firstChild; n;) {\r\n                if (n.nodeType == 3) {\r\n                    if (!n.nodeValue.match(/[^ \\f\\n\\r\\t\\v]/)) {\r\n                        var nxt = n.nextSibling;\r\n                        e.removeChild(n);\r\n                        n = nxt;\r\n                    }\r\n                    else\r\n                        n = n.nextSibling;\r\n                }\r\n                else if (n.nodeType == 1) {\r\n                    X.removeWhite(n);\r\n                    n = n.nextSibling;\r\n                }\r\n                else\r\n                    n = n.nextSibling;\r\n            }\r\n            return e;\r\n        }\r\n    };\r\n    if (xml.nodeType == 9)\r\n        xml = xml.documentElement;\r\n    var json = X.toJson(X.toObj(X.removeWhite(xml)), xml.nodeName, \"\\t\");\r\n    return JSON.parse(\"{\\n\" + tab + (tab ? json.replace(/\\t/g, tab) : json.replace(/\\t|\\n/g, \"\")) + \"\\n}\");\r\n}\r\nexports.xml2json = xml2json;\r\nfunction fetchUserContent(user, environment = '') {\r\n    return new Promise((resolve, reject) => {\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open(\"GET\", `${environment === 'develop' ? 'https://cors-anywhere.herokuapp.com/' : ''}https://medium.com/feed/@${user.User.replace(/\\@/g, '')}`);\r\n        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');\r\n        xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET');\r\n        xhr.addEventListener(\"load\", (res) => {\r\n            resolve(res);\r\n        });\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState != 4)\r\n                return;\r\n            if (xhr.status == 200) {\r\n                if (xhr.responseXML) {\r\n                    resolve(xhr.responseXML);\r\n                }\r\n                else {\r\n                    try {\r\n                        var parser = new DOMParser();\r\n                        resolve(parser.parseFromString(xhr.response, \"text/xml\"));\r\n                    }\r\n                    catch (e) {\r\n                        reject(e);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                reject('User content could not be loaded - please check if the url exists and if it is loaded from the same domain as the website!');\r\n            }\r\n        };\r\n        xhr.send();\r\n    });\r\n}\r\nexports.fetchUserContent = fetchUserContent;\r\n\n\n//# sourceURL=webpack:///./src/ts/helpers/index.ts?");
  
  /***/ })
  
  /******/ });